<?xml version="1.0" encoding="UTF-8"?>
<package packagerversion="1.9.1" version="2.0" xmlns="http://pear.php.net/dtd/package-2.0" xmlns:tasks="http://pear.php.net/dtd/tasks-1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pear.php.net/dtd/tasks-1.0 http://pear.php.net/dtd/tasks-1.0.xsd http://pear.php.net/dtd/package-2.0 http://pear.php.net/dtd/package-2.0.xsd">
 <name>teds</name>
 <channel>pecl.php.net</channel>
 <summary>Provides extra data structures and iterable/array functionality.</summary>
 <description>teds (Tentative Extra Data Structures) is a collection of data structures and iterable functionality</description>
 <lead>
  <name>Tyson Andre</name>
  <user>tandre</user>
  <email>tandre@php.net</email>
  <active>yes</active>
 </lead>
 <date>2022-02-06</date>
 <time>16:00:00</time>
 <version>
  <release>0.11.0dev</release>
  <api>0.11.0dev</api>
 </version>
 <stability>
  <release>stable</release>
  <api>stable</api>
 </stability>
 <license uri="https://github.com/TysonAndre/teds/blob/main/COPYING">BSD-3-Clause</license>
 <notes>
* Deduplicate code.
* Reduce size/capacity limits to the same limits as array for Deque.
* Add ImmutableSequence::map(), filter()
 </notes>
 <contents>
  <dir name="/">
   <file name="config.m4" role="src" />
   <file name="config.w32" role="src" />
   <file name="teds.c" role="src" />
   <file name="teds.h" role="src" />
   <file name="teds_arginfo.h" role="src" />
   <file name="teds_bswap.h" role="src" />
   <file name="teds_deque_arginfo.h" role="src" />
   <file name="teds_deque.c" role="src" />
   <file name="teds_deque.h" role="src" />
   <file name="teds_deque.stub.php" role="src" />
   <file name="teds_immutablekeyvaluesequence_arginfo.h" role="src" />
   <file name="teds_immutablekeyvaluesequence.c" role="src" />
   <file name="teds_immutablekeyvaluesequence.h" role="src" />
   <file name="teds_immutablekeyvaluesequence.stub.php" role="src" />
   <file name="teds_immutablesequence_arginfo.h" role="src" />
   <file name="teds_immutablesequence.c" role="src" />
   <file name="teds_immutablesequence.h" role="src" />
   <file name="teds_immutablesequence.stub.php" role="src" />
   <file name="teds_intvector_arginfo.h" role="src" />
   <file name="teds_intvector.c" role="src" />
   <file name="teds_intvector.h" role="src" />
   <file name="teds_intvector.stub.php" role="src" />
   <file name="teds_keyvaluevector_arginfo.h" role="src" />
   <file name="teds_keyvaluevector.c" role="src" />
   <file name="teds_keyvaluevector.h" role="src" />
   <file name="teds_keyvaluevector.stub.php" role="src" />
   <file name="teds_lowmemoryvector_arginfo.h" role="src" />
   <file name="teds_lowmemoryvector.c" role="src" />
   <file name="teds_lowmemoryvector.h" role="src" />
   <file name="teds_lowmemoryvector.stub.php" role="src" />
   <file name="teds_sortedstrictmap_arginfo.h" role="src" />
   <file name="teds_sortedstrictmap.c" role="src" />
   <file name="teds_sortedstrictmap.h" role="src" />
   <file name="teds_sortedstrictmap.stub.php" role="src" />
   <file name="teds_sortedstrictset_arginfo.h" role="src" />
   <file name="teds_sortedstrictset.c" role="src" />
   <file name="teds_sortedstrictset.h" role="src" />
   <file name="teds_sortedstrictset.stub.php" role="src" />
   <file name="teds_stablesortedlistmap_arginfo.h" role="src" />
   <file name="teds_stablesortedlistmap.c" role="src" />
   <file name="teds_stablesortedlistmap.h" role="src" />
   <file name="teds_stablesortedlistmap.stub.php" role="src" />
   <file name="teds_stablesortedlistset_arginfo.h" role="src" />
   <file name="teds_stablesortedlistset.c" role="src" />
   <file name="teds_stablesortedlistset.h" role="src" />
   <file name="teds_stablesortedlistset.stub.php" role="src" />
   <file name="teds_stableheap_arginfo.h" role="src" />
   <file name="teds_stableheap.c" role="src" />
   <file name="teds_stableheap.h" role="src" />
   <file name="teds_stableheap.stub.php" role="src" />
   <file name="teds_strictmap_arginfo.h" role="src" />
   <file name="teds_strictmap.c" role="src" />
   <file name="teds_strictmap.h" role="src" />
   <file name="teds_strictmap.stub.php" role="src" />
   <file name="teds_strictset_arginfo.h" role="src" />
   <file name="teds_strictset.c" role="src" />
   <file name="teds_strictset.h" role="src" />
   <file name="teds_strictset.stub.php" role="src" />
   <file name="teds_util.h" role="src" />
   <file name="teds_vector_arginfo.h" role="src" />
   <file name="teds_vector.c" role="src" />
   <file name="teds_vector.h" role="src" />
   <file name="teds_vector.stub.php" role="src" />
   <file name="php_teds.h" role="src" />
   <file name="README.md" role="doc" />
   <file name="COPYING" role="doc" />
   <!-- Generated by: find tests -type f|grep -E '\.(inc|phpt)$' |LC_ALL=C sort|sed 's,^tests/\(.*\),    <file name="\1" role="test" />,' -->
   <dir name="tests">
    <file name="Deque/Deque.phpt" role="test" />
    <file name="Deque/aggregate.phpt" role="test" />
    <file name="Deque/arrayCast.phpt" role="test" />
    <file name="Deque/clear.phpt" role="test" />
    <file name="Deque/clone.phpt" role="test" />
    <file name="Deque/contains.phpt" role="test" />
    <file name="Deque/exceptionhandler.phpt" role="test" />
    <file name="Deque/foreach.phpt" role="test" />
    <file name="Deque/isEmpty.phpt" role="test" />
    <file name="Deque/iterator.phpt" role="test" />
    <file name="Deque/offsetGet.phpt" role="test" />
    <file name="Deque/offsetGetShifted.phpt" role="test" />
    <file name="Deque/popMany.phpt" role="test" />
    <file name="Deque/push_multiple.phpt" role="test" />
    <file name="Deque/push_pop.phpt" role="test" />
    <file name="Deque/push_pop_both.phpt" role="test" />
    <file name="Deque/reinit_forbidden.phpt" role="test" />
    <file name="Deque/serialization.phpt" role="test" />
    <file name="Deque/setValueAt.phpt" role="test" />
    <file name="Deque/set_state.phpt" role="test" />
    <file name="Deque/shift.phpt" role="test" />
    <file name="Deque/toArray.phpt" role="test" />
    <file name="Deque/traversable.phpt" role="test" />
    <file name="Deque/unserialize.phpt" role="test" />
    <file name="Deque/unshift.phpt" role="test" />
    <file name="ImmutableKeyValueSequence/ImmutableKeyValueSequence.phpt" role="test" />
    <file name="ImmutableKeyValueSequence/aggregate.phpt" role="test" />
    <file name="ImmutableKeyValueSequence/clone.phpt" role="test" />
    <file name="ImmutableKeyValueSequence/contains.phpt" role="test" />
    <file name="ImmutableKeyValueSequence/exceptionhandler.phpt" role="test" />
    <file name="ImmutableKeyValueSequence/from_pairs.phpt" role="test" />
    <file name="ImmutableKeyValueSequence/keyAt_valueAt.phpt" role="test" />
    <file name="ImmutableKeyValueSequence/keys_values.phpt" role="test" />
    <file name="ImmutableKeyValueSequence/reinit_forbidden.phpt" role="test" />
    <file name="ImmutableKeyValueSequence/serialization.phpt" role="test" />
    <file name="ImmutableKeyValueSequence/set_state.phpt" role="test" />
    <file name="ImmutableKeyValueSequence/traversable.phpt" role="test" />
    <file name="ImmutableKeyValueSequence/unserialize.phpt" role="test" />
    <file name="ImmutableSequence/ImmutableSequence.phpt" role="test" />
    <file name="ImmutableSequence/aggregate.phpt" role="test" />
    <file name="ImmutableSequence/clone.phpt" role="test" />
    <file name="ImmutableSequence/contains.phpt" role="test" />
    <file name="ImmutableSequence/exceptionhandler.phpt" role="test" />
    <file name="ImmutableSequence/offsetGet.phpt" role="test" />
    <file name="ImmutableSequence/reinit_forbidden.phpt" role="test" />
    <file name="ImmutableSequence/serialization.phpt" role="test" />
    <file name="ImmutableSequence/set_state.phpt" role="test" />
    <file name="ImmutableSequence/toArray.phpt" role="test" />
    <file name="ImmutableSequence/traversable.phpt" role="test" />
    <file name="ImmutableSequence/unserialize.phpt" role="test" />
    <file name="IntVector/Vector.phpt" role="test" />
    <file name="IntVector/aggregate.phpt" role="test" />
    <file name="IntVector/arrayCast.phpt" role="test" />
    <file name="IntVector/clone.phpt" role="test" />
    <file name="IntVector/exceptionhandler.phpt" role="test" />
    <file name="IntVector/gc.phpt" role="test" />
    <file name="IntVector/isEmpty.phpt" role="test" />
    <file name="IntVector/isset.phpt" role="test" />
    <file name="IntVector/offsetGet.phpt" role="test" />
    <file name="IntVector/promote.phpt" role="test" />
    <file name="IntVector/push_pop.phpt" role="test" />
    <file name="IntVector/reinit_forbidden.phpt" role="test" />
    <file name="IntVector/serialization.phpt" role="test" />
    <file name="IntVector/serialization_64.phpt" role="test" />
    <file name="IntVector/setValueAt.phpt" role="test" />
    <file name="IntVector/set_state.phpt" role="test" />
    <file name="IntVector/specializations.phpt" role="test" />
    <file name="IntVector/toArray.phpt" role="test" />
    <file name="IntVector/traversable.phpt" role="test" />
    <file name="IntVector/unserialize.phpt" role="test" />
    <file name="KeyValueVector/KeyValueSequence.phpt" role="test" />
    <file name="KeyValueVector/aggregate.phpt" role="test" />
    <file name="KeyValueVector/clone.phpt" role="test" />
    <file name="KeyValueVector/contains.phpt" role="test" />
    <file name="KeyValueVector/exceptionhandler.phpt" role="test" />
    <file name="KeyValueVector/from_pairs.phpt" role="test" />
    <file name="KeyValueVector/keyAt_valueAt.phpt" role="test" />
    <file name="KeyValueVector/keys_values.phpt" role="test" />
    <file name="KeyValueVector/push_pop.phpt" role="test" />
    <file name="KeyValueVector/reinit_forbidden.phpt" role="test" />
    <file name="KeyValueVector/serialization.phpt" role="test" />
    <file name="KeyValueVector/setKeyAt.phpt" role="test" />
    <file name="KeyValueVector/setSize.phpt" role="test" />
    <file name="KeyValueVector/set_state.phpt" role="test" />
    <file name="KeyValueVector/traversable.phpt" role="test" />
    <file name="KeyValueVector/unserialize.phpt" role="test" />
    <file name="LowMemoryVector/Vector.phpt" role="test" />
    <file name="LowMemoryVector/aggregate.phpt" role="test" />
    <file name="LowMemoryVector/arrayCast.phpt" role="test" />
    <file name="LowMemoryVector/bitsetSerialization.phpt" role="test" />
    <file name="LowMemoryVector/clone.phpt" role="test" />
    <file name="LowMemoryVector/contains.phpt" role="test" />
    <file name="LowMemoryVector/exceptionhandler.phpt" role="test" />
    <file name="LowMemoryVector/isEmpty.phpt" role="test" />
    <file name="LowMemoryVector/isset.phpt" role="test" />
    <file name="LowMemoryVector/jsonEncodeRecursive.phpt" role="test" />
    <file name="LowMemoryVector/offsetGet.phpt" role="test" />
    <file name="LowMemoryVector/promote.phpt" role="test" />
    <file name="LowMemoryVector/push_pop.phpt" role="test" />
    <file name="LowMemoryVector/reinit_forbidden.phpt" role="test" />
    <file name="LowMemoryVector/serialization.phpt" role="test" />
    <file name="LowMemoryVector/serialization_64.phpt" role="test" />
    <file name="LowMemoryVector/setValueAt.phpt" role="test" />
    <file name="LowMemoryVector/set_state.phpt" role="test" />
    <file name="LowMemoryVector/specializations.phpt" role="test" />
    <file name="LowMemoryVector/toArray.phpt" role="test" />
    <file name="LowMemoryVector/traversable.phpt" role="test" />
    <file name="LowMemoryVector/unserialize.phpt" role="test" />
    <file name="SortedStrictMap/ImmutableKeyValueSequence.phpt" role="test" />
    <file name="SortedStrictMap/SortedStrictMap.phpt" role="test" />
    <file name="SortedStrictMap/aggregate.phpt" role="test" />
    <file name="SortedStrictMap/array.phpt" role="test" />
    <file name="SortedStrictMap/clear.phpt" role="test" />
    <file name="SortedStrictMap/clone.phpt" role="test" />
    <file name="SortedStrictMap/contains.phpt" role="test" />
    <file name="SortedStrictMap/exceptionhandler.phpt" role="test" />
    <file name="SortedStrictMap/fast_balanced_creation.phpt" role="test" />
    <file name="SortedStrictMap/from_pairs.phpt" role="test" />
    <file name="SortedStrictMap/gc.phpt" role="test" />
    <file name="SortedStrictMap/iteration_delete.phpt" role="test" />
    <file name="SortedStrictMap/iteration_insert.phpt" role="test" />
    <file name="SortedStrictMap/keys_values.phpt" role="test" />
    <file name="SortedStrictMap/large.phpt" role="test" />
    <file name="SortedStrictMap/offsetExists.phpt" role="test" />
    <file name="SortedStrictMap/rebalance_insert.phpt" role="test" />
    <file name="SortedStrictMap/reinit_forbidden.phpt" role="test" />
    <file name="SortedStrictMap/remove.phpt" role="test" />
    <file name="SortedStrictMap/remove_single.phpt" role="test" />
    <file name="SortedStrictMap/serialization.phpt" role="test" />
    <file name="SortedStrictMap/shift.phpt" role="test" />
    <file name="SortedStrictMap/shift_repeated.phpt" role="test" />
    <file name="SortedStrictMap/traversable.phpt" role="test" />
    <file name="SortedStrictMap/types.phpt" role="test" />
    <file name="SortedStrictMap/unserialize.phpt" role="test" />
    <file name="SortedStrictSet/StrictSet.phpt" role="test" />
    <file name="SortedStrictSet/add.phpt" role="test" />
    <file name="SortedStrictSet/aggregate.phpt" role="test" />
    <file name="SortedStrictSet/clone.phpt" role="test" />
    <file name="SortedStrictSet/contains.phpt" role="test" />
    <file name="SortedStrictSet/exceptionhandler.phpt" role="test" />
    <file name="SortedStrictSet/gc.phpt" role="test" />
    <file name="SortedStrictSet/iteration_delete.phpt" role="test" />
    <file name="SortedStrictSet/iteration_insert.phpt" role="test" />
    <file name="SortedStrictSet/rebalance_add.phpt" role="test" />
    <file name="SortedStrictSet/reinit_forbidden.phpt" role="test" />
    <file name="SortedStrictSet/serialization.phpt" role="test" />
    <file name="SortedStrictSet/set_state.phpt" role="test" />
    <file name="SortedStrictSet/shift.phpt" role="test" />
    <file name="SortedStrictSet/shift_repeated.phpt" role="test" />
    <file name="SortedStrictSet/traversable.phpt" role="test" />
    <file name="SortedStrictSet/unserialize.phpt" role="test" />
    <file name="SortedStrictSet/unserialize_sorted.phpt" role="test" />
    <file name="StableHeap/StableHeap.phpt" role="test" />
    <file name="StableHeap/extensible.phpt" role="test" />
    <file name="StableHeap/reflection.phpt" role="test" />
    <file name="StableSortedListMap/ImmutableKeyValueSequence.phpt" role="test" />
    <file name="StableSortedListMap/SortedStrictMap.phpt" role="test" />
    <file name="StableSortedListMap/aggregate.phpt" role="test" />
    <file name="StableSortedListMap/array.phpt" role="test" />
    <file name="StableSortedListMap/clear.phpt" role="test" />
    <file name="StableSortedListMap/clone.phpt" role="test" />
    <file name="StableSortedListMap/contains.phpt" role="test" />
    <file name="StableSortedListMap/exceptionhandler.phpt" role="test" />
    <file name="StableSortedListMap/from_pairs.phpt" role="test" />
    <file name="StableSortedListMap/gc.phpt" role="test" />
    <file name="StableSortedListMap/keys_values.phpt" role="test" />
    <file name="StableSortedListMap/offsetExists.phpt" role="test" />
    <file name="StableSortedListMap/reinit_forbidden.phpt" role="test" />
    <file name="StableSortedListMap/remove.phpt" role="test" />
    <file name="StableSortedListMap/serialization.phpt" role="test" />
    <file name="StableSortedListMap/shift.phpt" role="test" />
    <file name="StableSortedListMap/traversable.phpt" role="test" />
    <file name="StableSortedListMap/types.phpt" role="test" />
    <file name="StableSortedListMap/unserialize.phpt" role="test" />
    <file name="StableSortedListSet/StrictSet.phpt" role="test" />
    <file name="StableSortedListSet/add.phpt" role="test" />
    <file name="StableSortedListSet/aggregate.phpt" role="test" />
    <file name="StableSortedListSet/clone.phpt" role="test" />
    <file name="StableSortedListSet/contains.phpt" role="test" />
    <file name="StableSortedListSet/exceptionhandler.phpt" role="test" />
    <file name="StableSortedListSet/gc.phpt" role="test" />
    <file name="StableSortedListSet/reinit_forbidden.phpt" role="test" />
    <file name="StableSortedListSet/serialization.phpt" role="test" />
    <file name="StableSortedListSet/set_state.phpt" role="test" />
    <file name="StableSortedListSet/shift.phpt" role="test" />
    <file name="StableSortedListSet/traversable.phpt" role="test" />
    <file name="StableSortedListSet/unserialize.phpt" role="test" />
    <file name="StableSortedListSet/unserialize_sorted.phpt" role="test" />
    <file name="StrictMap/ImmutableKeyValueSequence.phpt" role="test" />
    <file name="StrictMap/StrictMap.phpt" role="test" />
    <file name="StrictMap/aggregate.phpt" role="test" />
    <file name="StrictMap/array.phpt" role="test" />
    <file name="StrictMap/clear.phpt" role="test" />
    <file name="StrictMap/clone.phpt" role="test" />
    <file name="StrictMap/contains.phpt" role="test" />
    <file name="StrictMap/exceptionhandler.phpt" role="test" />
    <file name="StrictMap/from_pairs.phpt" role="test" />
    <file name="StrictMap/gc.phpt" role="test" />
    <file name="StrictMap/keys_values.phpt" role="test" />
    <file name="StrictMap/offsetExists.phpt" role="test" />
    <file name="StrictMap/reinit_forbidden.phpt" role="test" />
    <file name="StrictMap/remove.phpt" role="test" />
    <file name="StrictMap/serialization.phpt" role="test" />
    <file name="StrictMap/traversable.phpt" role="test" />
    <file name="StrictMap/types.phpt" role="test" />
    <file name="StrictMap/unserialize.phpt" role="test" />
    <file name="StrictSet/StrictSet.phpt" role="test" />
    <file name="StrictSet/add.phpt" role="test" />
    <file name="StrictSet/aggregate.phpt" role="test" />
    <file name="StrictSet/clone.phpt" role="test" />
    <file name="StrictSet/contains.phpt" role="test" />
    <file name="StrictSet/exceptionhandler.phpt" role="test" />
    <file name="StrictSet/expand.phpt" role="test" />
    <file name="StrictSet/gc.phpt" role="test" />
    <file name="StrictSet/queue.phpt" role="test" />
    <file name="StrictSet/reinit_forbidden.phpt" role="test" />
    <file name="StrictSet/serialization.phpt" role="test" />
    <file name="StrictSet/set_state.phpt" role="test" />
    <file name="StrictSet/single.phpt" role="test" />
    <file name="StrictSet/traversable.phpt" role="test" />
    <file name="StrictSet/unserialize.phpt" role="test" />
    <file name="Vector/Vector.phpt" role="test" />
    <file name="Vector/aggregate.phpt" role="test" />
    <file name="Vector/arrayCast.phpt" role="test" />
    <file name="Vector/clear.phpt" role="test" />
    <file name="Vector/clone.phpt" role="test" />
    <file name="Vector/contains.phpt" role="test" />
    <file name="Vector/exceptionhandler.phpt" role="test" />
    <file name="Vector/filter.phpt" role="test" />
    <file name="Vector/isEmpty.phpt" role="test" />
    <file name="Vector/isset.phpt" role="test" />
    <file name="Vector/map.phpt" role="test" />
    <file name="Vector/offsetGet.phpt" role="test" />
    <file name="Vector/push_pop.phpt" role="test" />
    <file name="Vector/reinit_forbidden.phpt" role="test" />
    <file name="Vector/reserve.phpt" role="test" />
    <file name="Vector/serialization.phpt" role="test" />
    <file name="Vector/setSize.phpt" role="test" />
    <file name="Vector/setSize_default.phpt" role="test" />
    <file name="Vector/setValueAt.phpt" role="test" />
    <file name="Vector/set_state.phpt" role="test" />
    <file name="Vector/shrink_capacity.phpt" role="test" />
    <file name="Vector/toArray.phpt" role="test" />
    <file name="Vector/traversable.phpt" role="test" />
    <file name="Vector/unserialize.phpt" role="test" />
    <file name="array/array_value_first.phpt" role="test" />
    <file name="encode_raw_string.inc" role="test" />
    <file name="iterable/all_array.phpt" role="test" />
    <file name="iterable/all_traversable.phpt" role="test" />
    <file name="iterable/any_array.phpt" role="test" />
    <file name="iterable/any_traversable.phpt" role="test" />
    <file name="iterable/find_array.phpt" role="test" />
    <file name="iterable/find_traversable.phpt" role="test" />
    <file name="iterable/fold_array.phpt" role="test" />
    <file name="iterable/fold_traversable.phpt" role="test" />
    <file name="iterable/includes_value.phpt" role="test" />
    <file name="iterable/none_array.phpt" role="test" />
    <file name="iterable/none_traversable.phpt" role="test" />
    <file name="iterable/unique_values.phpt" role="test" />
    <file name="iterable/unique_values_traversable.phpt" role="test" />
    <file name="misc/binary_search.phpt" role="test" />
    <file name="misc/binary_search_edge_case.phpt" role="test" />
    <file name="misc/binary_search_edge_case_2.phpt" role="test" />
    <file name="misc/stable_compare.phpt" role="test" />
    <file name="misc/stable_compare_2.phpt" role="test" />
    <file name="misc/stable_compare_3.phpt" role="test" />
    <file name="misc/strict_hash.phpt" role="test" />
    <file name="misc/strict_hash_array_recursion.phpt" role="test" />
    <file name="misc/strict_hash_array_references.phpt" role="test" />
    <file name="misc/strict_hash_recursion.phpt" role="test" />
    <file name="misc/strict_hash_typed_property.phpt" role="test" />
   </dir>
  </dir>
 </contents>
 <dependencies>
  <required>
   <php>
    <min>8.0.0</min>
   </php>
   <pearinstaller>
    <min>1.10</min>
   </pearinstaller>
  </required>
 </dependencies>
 <providesextension>teds</providesextension>
 <extsrcrelease />
 <changelog>
  <release>
   <date>2022-02-06</date>
   <time>16:00:00</time>
   <version>
    <release>0.10.0</release>
    <api>0.10.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="https://github.com/TysonAndre/teds/blob/main/COPYING">BSD-3-Clause</license>
   <notes>
* Speed up unserializing SortedStrictSet/SortedStrictMap when the input data is already sorted. (If the data is not sorted, then build the binary tree the slow but correct way)
* Add a LowMemoryVector type and IntVector type, supporting reduced memory usage.
* Deduplicate code.
* Fix garbage collection in some classes.
   </notes>
  </release>
  <release>
   <date>2022-01-30</date>
   <time>16:00:00</time>
   <version>
    <release>0.9.2</release>
    <api>0.9.2</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="https://github.com/TysonAndre/teds/blob/main/COPYING">BSD-3-Clause</license>
   <notes>
* Make SortedStrictSet/SortedStrictMap use a red-black tree that is rebalanced on insertions and removals, guaranteeing worst-case logarithmic time for insertions/removals/lookups.
   </notes>
  </release>
  <release>
   <date>2022-01-29</date>
   <time>16:00:00</time>
   <version>
    <release>0.9.1</release>
    <api>0.9.1</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="https://github.com/TysonAndre/teds/blob/main/COPYING">BSD-3-Clause</license>
   <notes>
* Make SortedStrictSet/SortedStrictMap use a binary search tree (not yet a balanced tree).
* Associate iterators on SortedStrictSet/SortedStrictMap with nodes of the tree.
  Invalidate iterators pointing to a node when that node of the set/map is removed.
* Fix sorting order when instantiating StableSortedListSet/SortedStrictSet/SortedStrictMap from unsorted arrays.
   </notes>
  </release>
  <release>
   <date>2022-01-23</date>
   <time>16:00:00</time>
   <version>
    <release>0.9.0</release>
    <api>0.9.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="https://github.com/TysonAndre/teds/blob/main/COPYING">BSD-3-Clause</license>
   <notes>
* Migrate `Teds\StrictSet`, `Teds\StrictMap`, and `Teds\unique_values` implementation to use an actual hash table instead of a list of unique values.
   </notes>
  </release>
  <release>
   <date>2022-01-23</date>
   <time>16:00:00</time>
   <version>
    <release>0.8.0</release>
    <api>0.8.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="https://github.com/TysonAndre/teds/blob/main/COPYING">BSD-3-Clause</license>
   <notes>
* Add `StableSortedListSet` and `StableSortedListMap` as memory-efficient alternatives to `SortedStrictSet`/`SortedStrictMap`.
* Speed up `SortedStrictSet::__unserialize` and `SortedStrictMap::__unserialize` when data is already sorted.
* Fix crash in `StrictSet` and `SortedStrictSet` during cyclic garbage collection.
   </notes>
  </release>
  <release>
   <date>2022-01-22</date>
   <time>16:00:00</time>
   <version>
    <release>0.7.0</release>
    <api>0.7.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="https://github.com/TysonAndre/teds/blob/main/COPYING">BSD-3-Clause</license>
   <notes>
* Make `Teds\strict_hash` ignore recursion caused by unrelated functions (e.g. var_dump calling `__debugInfo` calling `strict_hash`)
* Add `Teds\binary_search(array $values, mixed $target, callable $comparer = null, bool $useKey=false)`
* Change parent class of `Teds\StableMaxHeap` and `Teds\StableMinHeap` to `SplHeap`.
* Fix deduplication when constructing `StrictSet` from `iterable`, `StrictMap` from `Traversable`.
* Add `Teds\unique_values(iterable): array` using `strict_hash` to check for duplicates.
   </notes>
  </release>
  <release>
   <date>2022-01-18</date>
   <time>16:00:00</time>
   <version>
    <release>0.6.0</release>
    <api>0.6.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="https://github.com/TysonAndre/teds/blob/main/COPYING">BSD-3-Clause</license>
   <notes>
* Make `Teds\stable_compare` sort objects by class name with strcmp before sorting by spl_object_id.
* Add a hash map `StrictMap` using `Teds\stable_hash` as a hash algorithm.
  Keys are returned in order of insertion.
* Add a hash set `StrictSet` using `Teds\stable_hash` as a hash algorithm.
* Add a sorted map `SortedStrictMap` using `Teds\stable_compare` as a comparison function.
  Keys are returned ordered by `Teds\stable_compare` and no two keys have `stable_compare` return 0 (i.e. no two keys are equivalent).
* Add a sorted set `SortedStrictSet` using `Teds\stable_compare` as a comparison function.
* Add StableMinHeap/StableMaxHeap extending SplMinHeap/SplMaxHeap, using `Teds\stable_compare` as a comparison function.
   </notes>
  </release>
  <release>
   <date>2022-01-15</date>
   <time>16:00:00</time>
   <version>
    <release>0.5.1</release>
    <api>0.5.1</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="https://github.com/TysonAndre/teds/blob/main/COPYING">BSD-3-Clause</license>
   <notes>
* Add Teds\array_value_first(), Teds\array_value_last()
* Add `Teds\stable_compare($v1, $v2): int` for a stable comparison function of arbitrary values. (see tests/misc/stable_compare.phpt).
  Like strcmp, this returns a negative value for less than, and positive for greater than, and 0 for equality.
  Note that php's `&lt;` operator is not stable. `'10' &lt; '0a' &lt; '1b' &lt; '9' &lt; '10'`.
  stable_compare fixes that by strictly ordering:
  `null &lt; false &lt; true &lt; int,float &lt; string &lt; array &lt; object &lt; resource`.
  (objects and resources are compared by id, and arrays are compared recursively. Numbers are compared numerically. If an int is equal to a float, then the int is first)
  (strings use strcmp)
* Make Deque iteration account for calls to shift/unshift tracking the position of the front of the Deque.
  Calls to shift/unshift will do the following:
  - Increase/Decrease the value returned by the iterator's key() by the number of elements added/removed to/from the front of the Deque. (`$deque[$iteratorKey] === $iteratorValue` at the time the key and value are returned).
  - Repeated calls to shift will cause valid() to return false if the iterator's position ends up before the start of the Deque at the time iteration resumes.
  - They will not cause the remaining values to be iterated over more than once or skipped.
   </notes>
  </release>

  <release>
   <date>2021-09-26</date>
   <time>16:00:00</time>
   <version>
    <release>0.4.1</release>
    <api>0.4.1</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="https://github.com/TysonAndre/teds/blob/main/COPYING">BSD-3-Clause</license>
   <notes>
* Fix computation of next power of 2 for sizes of `2 ** 32` or larger.
   </notes>
  </release>
  <release>
   <date>2021-09-26</date>
   <time>16:00:00</time>
   <version>
    <release>0.4.0</release>
    <api>0.4.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="https://github.com/TysonAndre/teds/blob/main/COPYING">BSD-3-Clause</license>
   <notes>
* Backwards incompatible change: Change `Deque` APIs to be consistent with SplDoublyLinkedList and `array_push`: change pushBack/popBack/pushFront/popFront to push/pop/unshift/shift
* Backwards incompatible change: Remove `$preserve_keys` flag from `Vector::__construct` (Always reindex keys in order of iteration instead).
* Add isEmpty() method to datastructures
* Make exceeding the capacity limit for a vector a fatal error.
* Make Deque::push() and unshift() variadic.
 </notes>
  </release>
  <release>
   <date>2021-09-19</date>
   <time>16:00:00</time>
   <version>
    <release>0.3.0</release>
    <api>0.3.0</api>
   </version>
   <stability>
    <release>alpha</release>
    <api>alpha</api>
   </stability>
   <license uri="https://github.com/TysonAndre/teds/blob/main/COPYING">BSD-3-Clause</license>
   <notes>
* Backwards incompatible change: Change `Vector::indexOf` return type from `int|false` to `?int` (and all other `indexOf*` methods in other data structures)
* Backwards incompatible change: Change `valueAt`/`setValueAt` to get/set in Deque, Vector, and ImmutableSequence
* Add optional parameter `$value = null` to `Vector::setSize()` to allow overriding the value used for padding when lengthening an array.
* Change exception handling for sizes/capacities that are definitely too large to allocate.
* Make Vector::push() variadic and accept 0 or more arguments, like `array_push` does.
* Reclaim unused memory in Deque when roughly a quarter or less of the internal buffer is used.
* Optimize performance of Deque, always use powers of 2 for the capacity of Deque to speed up reads/writes.
   </notes>
  </release>
  <release>
   <date>2021-09-16</date>
   <time>16:00:00</time>
   <version>
    <release>0.2.1</release>
    <api>0.2.1</api>
   </version>
   <stability>
    <release>alpha</release>
    <api>alpha</api>
   </stability>
   <license uri="https://github.com/TysonAndre/teds/blob/main/COPYING">BSD-3-Clause</license>
   <notes>
* Support `$vector[] = $value` and `$deque[] = $value` assignments to append to Vector/Deque.
* Add map() and filter() functions to Vector.
   </notes>
  </release>
  <release>
   <date>2021-09-12</date>
   <time>16:00:00</time>
   <version>
    <release>0.2.0</release>
    <api>0.2.0</api>
   </version>
   <stability>
    <release>alpha</release>
    <api>alpha</api>
   </stability>
   <license uri="https://github.com/TysonAndre/teds/blob/main/COPYING">BSD-3-Clause</license>
   <notes>
* Breaking change: Change `Teds\Vector::__construct` to add an additional parameter `bool $preserveKeys = true`,
  and use the original keys of arrays/Traversables by default, throwing for non-integers and invalid integer offsets.
  (Similar to the behavior of SplFixedArray::fromArray)
* Convert references to non-references when creating values from iterables.
* Minor performance improvements of `Teds\Vector`
   </notes>
  </release>
  <release>
   <date>2021-09-10</date>
   <time>16:00:00</time>
   <version>
    <release>0.1.1</release>
    <api>0.1.1</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="https://github.com/TysonAndre/teds/blob/main/COPYING">BSD-3-Clause</license>
   <notes>
* Add Teds\KeyValueVector
* Fix edge cases in Teds\Vector setSize
   </notes>
  </release>
  <release>
   <date>2021-08-24</date>
   <time>16:00:00</time>
   <version>
    <release>0.1.0a1</release>
    <api>0.1.0a1</api>
   </version>
   <stability>
    <release>alpha</release>
    <api>alpha</api>
   </stability>
   <license uri="https://github.com/TysonAndre/teds/blob/main/COPYING">BSD-3-Clause</license>
   <notes>
* Initial commit
   </notes>
  </release>
 </changelog>
</package>
